sudo: required

language: node_js
node_js:
  - "8"

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
  - master

before_install:
  #- git ls-remote --tags https://chromium.googlesource.com/chromium/src.git > ./TAGS
  #- export CHROMIUM_VERSION=`cat ./TAGS | grep refs | cut -d/ -f3 | sort -rn | head -1`
  # use stable chromium version
  - export CHROMIUM_VERSION=63.0.3205.0
  - echo $CHROMIUM_VERSION
  - export NODE_VERSION=$(wget -qO- https://nodejs.org/dist/latest-v8.x/ | sed -nE 's|.*>node-v(.*)\.pkg</a>.*|\1|p')
  - echo $NODE_VERSION
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo ${TRAVIS_BRANCH} ; fi`
  - echo $TAG
  - export REPO=$TRAVIS_REPO_SLUG
  - echo $REPO

install:
  - sudo curl -sSL https://get.docker.com/ | sh
  - echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
  - docker version
  - cd debian

  - git clone https://github.com/alvarcarto/url-to-pdf-api.git
  - cd url-to-pdf-api
  - ls -ahl
  - "export PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
  - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
  - npm install --production
  - rm -rf .git
  - cd ..

  - wget https://nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz -O node-v${NODE_VERSION}-linux-x64.tar.gz
  - tar -zxf node-v${NODE_VERSION}-linux-x64.tar.gz
  - cd ..

script:
  - docker build -t $REPO:$TAG -t $REPO:$PACKAGE_VERSION --build-arg CHROMIUM_VERSION=$CHROMIUM_VERSION --build-arg NODE_VERSION=$NODE_VERSION debian

after_success:
  - docker images
  - docker push $REPO:$TAG
  - docker push $REPO:$PACKAGE_VERSION
